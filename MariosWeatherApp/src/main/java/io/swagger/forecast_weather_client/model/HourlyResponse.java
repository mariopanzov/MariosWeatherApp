/*
 * Open-Meteo APIs
 * Open-Meteo offers free weather forecast APIs for open-source developers and non-commercial use. No API key is required.
 *
 * OpenAPI spec version: 1.0
 * Contact: info@open-meteo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.forecast_weather_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * HourlyResponse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-06-25T15:17:37.234703587Z[GMT]")

public class HourlyResponse {
  @SerializedName("time")
  private List<String> time = new ArrayList<String>();

  @SerializedName("temperature_2m")
  private List<Float> temperature2m = null;

  @SerializedName("relative_humidity_2m")
  private List<Float> relativeHumidity2m = null;

  @SerializedName("dew_point_2m")
  private List<Float> dewPoint2m = null;

  @SerializedName("apparent_temperature")
  private List<Float> apparentTemperature = null;

  @SerializedName("pressure_msl")
  private List<Float> pressureMsl = null;

  @SerializedName("cloud_cover")
  private List<Float> cloudCover = null;

  @SerializedName("cloud_cover_low")
  private List<Float> cloudCoverLow = null;

  @SerializedName("cloud_cover_mid")
  private List<Float> cloudCoverMid = null;

  @SerializedName("cloud_cover_high")
  private List<Float> cloudCoverHigh = null;

  @SerializedName("wind_speed_10m")
  private List<Float> windSpeed10m = null;

  @SerializedName("wind_speed_80m")
  private List<Float> windSpeed80m = null;

  @SerializedName("wind_speed_120m")
  private List<Float> windSpeed120m = null;

  @SerializedName("wind_speed_180m")
  private List<Float> windSpeed180m = null;

  @SerializedName("wind_direction_10m")
  private List<Float> windDirection10m = null;

  @SerializedName("wind_direction_80m")
  private List<Float> windDirection80m = null;

  @SerializedName("wind_direction_120m")
  private List<Float> windDirection120m = null;

  @SerializedName("wind_direction_180m")
  private List<Float> windDirection180m = null;

  @SerializedName("wind_gusts_10m")
  private List<Float> windGusts10m = null;

  @SerializedName("shortwave_radiation")
  private List<Float> shortwaveRadiation = null;

  @SerializedName("direct_radiation")
  private List<Float> directRadiation = null;

  @SerializedName("direct_normal_irradiance")
  private List<Float> directNormalIrradiance = null;

  @SerializedName("diffuse_radiation")
  private List<Float> diffuseRadiation = null;

  @SerializedName("vapour_pressure_deficit")
  private List<Float> vapourPressureDeficit = null;

  @SerializedName("evapotranspiration")
  private List<Float> evapotranspiration = null;

  @SerializedName("precipitation")
  private List<Float> precipitation = null;

  @SerializedName("weather_code")
  private List<Float> weatherCode = null;

  @SerializedName("snow_height")
  private List<Float> snowHeight = null;

  @SerializedName("freezing_level_height")
  private List<Float> freezingLevelHeight = null;

  @SerializedName("soil_temperature_0cm")
  private List<Float> soilTemperature0cm = null;

  @SerializedName("soil_temperature_6cm")
  private List<Float> soilTemperature6cm = null;

  @SerializedName("soil_temperature_18cm")
  private List<Float> soilTemperature18cm = null;

  @SerializedName("soil_temperature_54cm")
  private List<Float> soilTemperature54cm = null;

  @SerializedName("soil_moisture_0_1cm")
  private List<Float> soilMoisture01cm = null;

  @SerializedName("soil_moisture_1_3cm")
  private List<Float> soilMoisture13cm = null;

  @SerializedName("soil_moisture_3_9cm")
  private List<Float> soilMoisture39cm = null;

  @SerializedName("soil_moisture_9_27cm")
  private List<Float> soilMoisture927cm = null;

  @SerializedName("soil_moisture_27_81cm")
  private List<Float> soilMoisture2781cm = null;

  public HourlyResponse time(List<String> time) {
    this.time = time;
    return this;
  }

  public HourlyResponse addTimeItem(String timeItem) {
    this.time.add(timeItem);
    return this;
  }

   /**
   * Get time
   * @return time
  **/
  @Schema(required = true, description = "")
  public List<String> getTime() {
    return time;
  }

  public void setTime(List<String> time) {
    this.time = time;
  }

  public HourlyResponse temperature2m(List<Float> temperature2m) {
    this.temperature2m = temperature2m;
    return this;
  }

  public HourlyResponse addTemperature2mItem(Float temperature2mItem) {
    if (this.temperature2m == null) {
      this.temperature2m = new ArrayList<Float>();
    }
    this.temperature2m.add(temperature2mItem);
    return this;
  }

   /**
   * Get temperature2m
   * @return temperature2m
  **/
  @Schema(description = "")
  public List<Float> getTemperature2m() {
    return temperature2m;
  }

  public void setTemperature2m(List<Float> temperature2m) {
    this.temperature2m = temperature2m;
  }

  public HourlyResponse relativeHumidity2m(List<Float> relativeHumidity2m) {
    this.relativeHumidity2m = relativeHumidity2m;
    return this;
  }

  public HourlyResponse addRelativeHumidity2mItem(Float relativeHumidity2mItem) {
    if (this.relativeHumidity2m == null) {
      this.relativeHumidity2m = new ArrayList<Float>();
    }
    this.relativeHumidity2m.add(relativeHumidity2mItem);
    return this;
  }

   /**
   * Get relativeHumidity2m
   * @return relativeHumidity2m
  **/
  @Schema(description = "")
  public List<Float> getRelativeHumidity2m() {
    return relativeHumidity2m;
  }

  public void setRelativeHumidity2m(List<Float> relativeHumidity2m) {
    this.relativeHumidity2m = relativeHumidity2m;
  }

  public HourlyResponse dewPoint2m(List<Float> dewPoint2m) {
    this.dewPoint2m = dewPoint2m;
    return this;
  }

  public HourlyResponse addDewPoint2mItem(Float dewPoint2mItem) {
    if (this.dewPoint2m == null) {
      this.dewPoint2m = new ArrayList<Float>();
    }
    this.dewPoint2m.add(dewPoint2mItem);
    return this;
  }

   /**
   * Get dewPoint2m
   * @return dewPoint2m
  **/
  @Schema(description = "")
  public List<Float> getDewPoint2m() {
    return dewPoint2m;
  }

  public void setDewPoint2m(List<Float> dewPoint2m) {
    this.dewPoint2m = dewPoint2m;
  }

  public HourlyResponse apparentTemperature(List<Float> apparentTemperature) {
    this.apparentTemperature = apparentTemperature;
    return this;
  }

  public HourlyResponse addApparentTemperatureItem(Float apparentTemperatureItem) {
    if (this.apparentTemperature == null) {
      this.apparentTemperature = new ArrayList<Float>();
    }
    this.apparentTemperature.add(apparentTemperatureItem);
    return this;
  }

   /**
   * Get apparentTemperature
   * @return apparentTemperature
  **/
  @Schema(description = "")
  public List<Float> getApparentTemperature() {
    return apparentTemperature;
  }

  public void setApparentTemperature(List<Float> apparentTemperature) {
    this.apparentTemperature = apparentTemperature;
  }

  public HourlyResponse pressureMsl(List<Float> pressureMsl) {
    this.pressureMsl = pressureMsl;
    return this;
  }

  public HourlyResponse addPressureMslItem(Float pressureMslItem) {
    if (this.pressureMsl == null) {
      this.pressureMsl = new ArrayList<Float>();
    }
    this.pressureMsl.add(pressureMslItem);
    return this;
  }

   /**
   * Get pressureMsl
   * @return pressureMsl
  **/
  @Schema(description = "")
  public List<Float> getPressureMsl() {
    return pressureMsl;
  }

  public void setPressureMsl(List<Float> pressureMsl) {
    this.pressureMsl = pressureMsl;
  }

  public HourlyResponse cloudCover(List<Float> cloudCover) {
    this.cloudCover = cloudCover;
    return this;
  }

  public HourlyResponse addCloudCoverItem(Float cloudCoverItem) {
    if (this.cloudCover == null) {
      this.cloudCover = new ArrayList<Float>();
    }
    this.cloudCover.add(cloudCoverItem);
    return this;
  }

   /**
   * Get cloudCover
   * @return cloudCover
  **/
  @Schema(description = "")
  public List<Float> getCloudCover() {
    return cloudCover;
  }

  public void setCloudCover(List<Float> cloudCover) {
    this.cloudCover = cloudCover;
  }

  public HourlyResponse cloudCoverLow(List<Float> cloudCoverLow) {
    this.cloudCoverLow = cloudCoverLow;
    return this;
  }

  public HourlyResponse addCloudCoverLowItem(Float cloudCoverLowItem) {
    if (this.cloudCoverLow == null) {
      this.cloudCoverLow = new ArrayList<Float>();
    }
    this.cloudCoverLow.add(cloudCoverLowItem);
    return this;
  }

   /**
   * Get cloudCoverLow
   * @return cloudCoverLow
  **/
  @Schema(description = "")
  public List<Float> getCloudCoverLow() {
    return cloudCoverLow;
  }

  public void setCloudCoverLow(List<Float> cloudCoverLow) {
    this.cloudCoverLow = cloudCoverLow;
  }

  public HourlyResponse cloudCoverMid(List<Float> cloudCoverMid) {
    this.cloudCoverMid = cloudCoverMid;
    return this;
  }

  public HourlyResponse addCloudCoverMidItem(Float cloudCoverMidItem) {
    if (this.cloudCoverMid == null) {
      this.cloudCoverMid = new ArrayList<Float>();
    }
    this.cloudCoverMid.add(cloudCoverMidItem);
    return this;
  }

   /**
   * Get cloudCoverMid
   * @return cloudCoverMid
  **/
  @Schema(description = "")
  public List<Float> getCloudCoverMid() {
    return cloudCoverMid;
  }

  public void setCloudCoverMid(List<Float> cloudCoverMid) {
    this.cloudCoverMid = cloudCoverMid;
  }

  public HourlyResponse cloudCoverHigh(List<Float> cloudCoverHigh) {
    this.cloudCoverHigh = cloudCoverHigh;
    return this;
  }

  public HourlyResponse addCloudCoverHighItem(Float cloudCoverHighItem) {
    if (this.cloudCoverHigh == null) {
      this.cloudCoverHigh = new ArrayList<Float>();
    }
    this.cloudCoverHigh.add(cloudCoverHighItem);
    return this;
  }

   /**
   * Get cloudCoverHigh
   * @return cloudCoverHigh
  **/
  @Schema(description = "")
  public List<Float> getCloudCoverHigh() {
    return cloudCoverHigh;
  }

  public void setCloudCoverHigh(List<Float> cloudCoverHigh) {
    this.cloudCoverHigh = cloudCoverHigh;
  }

  public HourlyResponse windSpeed10m(List<Float> windSpeed10m) {
    this.windSpeed10m = windSpeed10m;
    return this;
  }

  public HourlyResponse addWindSpeed10mItem(Float windSpeed10mItem) {
    if (this.windSpeed10m == null) {
      this.windSpeed10m = new ArrayList<Float>();
    }
    this.windSpeed10m.add(windSpeed10mItem);
    return this;
  }

   /**
   * Get windSpeed10m
   * @return windSpeed10m
  **/
  @Schema(description = "")
  public List<Float> getWindSpeed10m() {
    return windSpeed10m;
  }

  public void setWindSpeed10m(List<Float> windSpeed10m) {
    this.windSpeed10m = windSpeed10m;
  }

  public HourlyResponse windSpeed80m(List<Float> windSpeed80m) {
    this.windSpeed80m = windSpeed80m;
    return this;
  }

  public HourlyResponse addWindSpeed80mItem(Float windSpeed80mItem) {
    if (this.windSpeed80m == null) {
      this.windSpeed80m = new ArrayList<Float>();
    }
    this.windSpeed80m.add(windSpeed80mItem);
    return this;
  }

   /**
   * Get windSpeed80m
   * @return windSpeed80m
  **/
  @Schema(description = "")
  public List<Float> getWindSpeed80m() {
    return windSpeed80m;
  }

  public void setWindSpeed80m(List<Float> windSpeed80m) {
    this.windSpeed80m = windSpeed80m;
  }

  public HourlyResponse windSpeed120m(List<Float> windSpeed120m) {
    this.windSpeed120m = windSpeed120m;
    return this;
  }

  public HourlyResponse addWindSpeed120mItem(Float windSpeed120mItem) {
    if (this.windSpeed120m == null) {
      this.windSpeed120m = new ArrayList<Float>();
    }
    this.windSpeed120m.add(windSpeed120mItem);
    return this;
  }

   /**
   * Get windSpeed120m
   * @return windSpeed120m
  **/
  @Schema(description = "")
  public List<Float> getWindSpeed120m() {
    return windSpeed120m;
  }

  public void setWindSpeed120m(List<Float> windSpeed120m) {
    this.windSpeed120m = windSpeed120m;
  }

  public HourlyResponse windSpeed180m(List<Float> windSpeed180m) {
    this.windSpeed180m = windSpeed180m;
    return this;
  }

  public HourlyResponse addWindSpeed180mItem(Float windSpeed180mItem) {
    if (this.windSpeed180m == null) {
      this.windSpeed180m = new ArrayList<Float>();
    }
    this.windSpeed180m.add(windSpeed180mItem);
    return this;
  }

   /**
   * Get windSpeed180m
   * @return windSpeed180m
  **/
  @Schema(description = "")
  public List<Float> getWindSpeed180m() {
    return windSpeed180m;
  }

  public void setWindSpeed180m(List<Float> windSpeed180m) {
    this.windSpeed180m = windSpeed180m;
  }

  public HourlyResponse windDirection10m(List<Float> windDirection10m) {
    this.windDirection10m = windDirection10m;
    return this;
  }

  public HourlyResponse addWindDirection10mItem(Float windDirection10mItem) {
    if (this.windDirection10m == null) {
      this.windDirection10m = new ArrayList<Float>();
    }
    this.windDirection10m.add(windDirection10mItem);
    return this;
  }

   /**
   * Get windDirection10m
   * @return windDirection10m
  **/
  @Schema(description = "")
  public List<Float> getWindDirection10m() {
    return windDirection10m;
  }

  public void setWindDirection10m(List<Float> windDirection10m) {
    this.windDirection10m = windDirection10m;
  }

  public HourlyResponse windDirection80m(List<Float> windDirection80m) {
    this.windDirection80m = windDirection80m;
    return this;
  }

  public HourlyResponse addWindDirection80mItem(Float windDirection80mItem) {
    if (this.windDirection80m == null) {
      this.windDirection80m = new ArrayList<Float>();
    }
    this.windDirection80m.add(windDirection80mItem);
    return this;
  }

   /**
   * Get windDirection80m
   * @return windDirection80m
  **/
  @Schema(description = "")
  public List<Float> getWindDirection80m() {
    return windDirection80m;
  }

  public void setWindDirection80m(List<Float> windDirection80m) {
    this.windDirection80m = windDirection80m;
  }

  public HourlyResponse windDirection120m(List<Float> windDirection120m) {
    this.windDirection120m = windDirection120m;
    return this;
  }

  public HourlyResponse addWindDirection120mItem(Float windDirection120mItem) {
    if (this.windDirection120m == null) {
      this.windDirection120m = new ArrayList<Float>();
    }
    this.windDirection120m.add(windDirection120mItem);
    return this;
  }

   /**
   * Get windDirection120m
   * @return windDirection120m
  **/
  @Schema(description = "")
  public List<Float> getWindDirection120m() {
    return windDirection120m;
  }

  public void setWindDirection120m(List<Float> windDirection120m) {
    this.windDirection120m = windDirection120m;
  }

  public HourlyResponse windDirection180m(List<Float> windDirection180m) {
    this.windDirection180m = windDirection180m;
    return this;
  }

  public HourlyResponse addWindDirection180mItem(Float windDirection180mItem) {
    if (this.windDirection180m == null) {
      this.windDirection180m = new ArrayList<Float>();
    }
    this.windDirection180m.add(windDirection180mItem);
    return this;
  }

   /**
   * Get windDirection180m
   * @return windDirection180m
  **/
  @Schema(description = "")
  public List<Float> getWindDirection180m() {
    return windDirection180m;
  }

  public void setWindDirection180m(List<Float> windDirection180m) {
    this.windDirection180m = windDirection180m;
  }

  public HourlyResponse windGusts10m(List<Float> windGusts10m) {
    this.windGusts10m = windGusts10m;
    return this;
  }

  public HourlyResponse addWindGusts10mItem(Float windGusts10mItem) {
    if (this.windGusts10m == null) {
      this.windGusts10m = new ArrayList<Float>();
    }
    this.windGusts10m.add(windGusts10mItem);
    return this;
  }

   /**
   * Get windGusts10m
   * @return windGusts10m
  **/
  @Schema(description = "")
  public List<Float> getWindGusts10m() {
    return windGusts10m;
  }

  public void setWindGusts10m(List<Float> windGusts10m) {
    this.windGusts10m = windGusts10m;
  }

  public HourlyResponse shortwaveRadiation(List<Float> shortwaveRadiation) {
    this.shortwaveRadiation = shortwaveRadiation;
    return this;
  }

  public HourlyResponse addShortwaveRadiationItem(Float shortwaveRadiationItem) {
    if (this.shortwaveRadiation == null) {
      this.shortwaveRadiation = new ArrayList<Float>();
    }
    this.shortwaveRadiation.add(shortwaveRadiationItem);
    return this;
  }

   /**
   * Get shortwaveRadiation
   * @return shortwaveRadiation
  **/
  @Schema(description = "")
  public List<Float> getShortwaveRadiation() {
    return shortwaveRadiation;
  }

  public void setShortwaveRadiation(List<Float> shortwaveRadiation) {
    this.shortwaveRadiation = shortwaveRadiation;
  }

  public HourlyResponse directRadiation(List<Float> directRadiation) {
    this.directRadiation = directRadiation;
    return this;
  }

  public HourlyResponse addDirectRadiationItem(Float directRadiationItem) {
    if (this.directRadiation == null) {
      this.directRadiation = new ArrayList<Float>();
    }
    this.directRadiation.add(directRadiationItem);
    return this;
  }

   /**
   * Get directRadiation
   * @return directRadiation
  **/
  @Schema(description = "")
  public List<Float> getDirectRadiation() {
    return directRadiation;
  }

  public void setDirectRadiation(List<Float> directRadiation) {
    this.directRadiation = directRadiation;
  }

  public HourlyResponse directNormalIrradiance(List<Float> directNormalIrradiance) {
    this.directNormalIrradiance = directNormalIrradiance;
    return this;
  }

  public HourlyResponse addDirectNormalIrradianceItem(Float directNormalIrradianceItem) {
    if (this.directNormalIrradiance == null) {
      this.directNormalIrradiance = new ArrayList<Float>();
    }
    this.directNormalIrradiance.add(directNormalIrradianceItem);
    return this;
  }

   /**
   * Get directNormalIrradiance
   * @return directNormalIrradiance
  **/
  @Schema(description = "")
  public List<Float> getDirectNormalIrradiance() {
    return directNormalIrradiance;
  }

  public void setDirectNormalIrradiance(List<Float> directNormalIrradiance) {
    this.directNormalIrradiance = directNormalIrradiance;
  }

  public HourlyResponse diffuseRadiation(List<Float> diffuseRadiation) {
    this.diffuseRadiation = diffuseRadiation;
    return this;
  }

  public HourlyResponse addDiffuseRadiationItem(Float diffuseRadiationItem) {
    if (this.diffuseRadiation == null) {
      this.diffuseRadiation = new ArrayList<Float>();
    }
    this.diffuseRadiation.add(diffuseRadiationItem);
    return this;
  }

   /**
   * Get diffuseRadiation
   * @return diffuseRadiation
  **/
  @Schema(description = "")
  public List<Float> getDiffuseRadiation() {
    return diffuseRadiation;
  }

  public void setDiffuseRadiation(List<Float> diffuseRadiation) {
    this.diffuseRadiation = diffuseRadiation;
  }

  public HourlyResponse vapourPressureDeficit(List<Float> vapourPressureDeficit) {
    this.vapourPressureDeficit = vapourPressureDeficit;
    return this;
  }

  public HourlyResponse addVapourPressureDeficitItem(Float vapourPressureDeficitItem) {
    if (this.vapourPressureDeficit == null) {
      this.vapourPressureDeficit = new ArrayList<Float>();
    }
    this.vapourPressureDeficit.add(vapourPressureDeficitItem);
    return this;
  }

   /**
   * Get vapourPressureDeficit
   * @return vapourPressureDeficit
  **/
  @Schema(description = "")
  public List<Float> getVapourPressureDeficit() {
    return vapourPressureDeficit;
  }

  public void setVapourPressureDeficit(List<Float> vapourPressureDeficit) {
    this.vapourPressureDeficit = vapourPressureDeficit;
  }

  public HourlyResponse evapotranspiration(List<Float> evapotranspiration) {
    this.evapotranspiration = evapotranspiration;
    return this;
  }

  public HourlyResponse addEvapotranspirationItem(Float evapotranspirationItem) {
    if (this.evapotranspiration == null) {
      this.evapotranspiration = new ArrayList<Float>();
    }
    this.evapotranspiration.add(evapotranspirationItem);
    return this;
  }

   /**
   * Get evapotranspiration
   * @return evapotranspiration
  **/
  @Schema(description = "")
  public List<Float> getEvapotranspiration() {
    return evapotranspiration;
  }

  public void setEvapotranspiration(List<Float> evapotranspiration) {
    this.evapotranspiration = evapotranspiration;
  }

  public HourlyResponse precipitation(List<Float> precipitation) {
    this.precipitation = precipitation;
    return this;
  }

  public HourlyResponse addPrecipitationItem(Float precipitationItem) {
    if (this.precipitation == null) {
      this.precipitation = new ArrayList<Float>();
    }
    this.precipitation.add(precipitationItem);
    return this;
  }

   /**
   * Get precipitation
   * @return precipitation
  **/
  @Schema(description = "")
  public List<Float> getPrecipitation() {
    return precipitation;
  }

  public void setPrecipitation(List<Float> precipitation) {
    this.precipitation = precipitation;
  }

  public HourlyResponse weatherCode(List<Float> weatherCode) {
    this.weatherCode = weatherCode;
    return this;
  }

  public HourlyResponse addWeatherCodeItem(Float weatherCodeItem) {
    if (this.weatherCode == null) {
      this.weatherCode = new ArrayList<Float>();
    }
    this.weatherCode.add(weatherCodeItem);
    return this;
  }

   /**
   * Get weatherCode
   * @return weatherCode
  **/
  @Schema(description = "")
  public List<Float> getWeatherCode() {
    return weatherCode;
  }

  public void setWeatherCode(List<Float> weatherCode) {
    this.weatherCode = weatherCode;
  }

  public HourlyResponse snowHeight(List<Float> snowHeight) {
    this.snowHeight = snowHeight;
    return this;
  }

  public HourlyResponse addSnowHeightItem(Float snowHeightItem) {
    if (this.snowHeight == null) {
      this.snowHeight = new ArrayList<Float>();
    }
    this.snowHeight.add(snowHeightItem);
    return this;
  }

   /**
   * Get snowHeight
   * @return snowHeight
  **/
  @Schema(description = "")
  public List<Float> getSnowHeight() {
    return snowHeight;
  }

  public void setSnowHeight(List<Float> snowHeight) {
    this.snowHeight = snowHeight;
  }

  public HourlyResponse freezingLevelHeight(List<Float> freezingLevelHeight) {
    this.freezingLevelHeight = freezingLevelHeight;
    return this;
  }

  public HourlyResponse addFreezingLevelHeightItem(Float freezingLevelHeightItem) {
    if (this.freezingLevelHeight == null) {
      this.freezingLevelHeight = new ArrayList<Float>();
    }
    this.freezingLevelHeight.add(freezingLevelHeightItem);
    return this;
  }

   /**
   * Get freezingLevelHeight
   * @return freezingLevelHeight
  **/
  @Schema(description = "")
  public List<Float> getFreezingLevelHeight() {
    return freezingLevelHeight;
  }

  public void setFreezingLevelHeight(List<Float> freezingLevelHeight) {
    this.freezingLevelHeight = freezingLevelHeight;
  }

  public HourlyResponse soilTemperature0cm(List<Float> soilTemperature0cm) {
    this.soilTemperature0cm = soilTemperature0cm;
    return this;
  }

  public HourlyResponse addSoilTemperature0cmItem(Float soilTemperature0cmItem) {
    if (this.soilTemperature0cm == null) {
      this.soilTemperature0cm = new ArrayList<Float>();
    }
    this.soilTemperature0cm.add(soilTemperature0cmItem);
    return this;
  }

   /**
   * Get soilTemperature0cm
   * @return soilTemperature0cm
  **/
  @Schema(description = "")
  public List<Float> getSoilTemperature0cm() {
    return soilTemperature0cm;
  }

  public void setSoilTemperature0cm(List<Float> soilTemperature0cm) {
    this.soilTemperature0cm = soilTemperature0cm;
  }

  public HourlyResponse soilTemperature6cm(List<Float> soilTemperature6cm) {
    this.soilTemperature6cm = soilTemperature6cm;
    return this;
  }

  public HourlyResponse addSoilTemperature6cmItem(Float soilTemperature6cmItem) {
    if (this.soilTemperature6cm == null) {
      this.soilTemperature6cm = new ArrayList<Float>();
    }
    this.soilTemperature6cm.add(soilTemperature6cmItem);
    return this;
  }

   /**
   * Get soilTemperature6cm
   * @return soilTemperature6cm
  **/
  @Schema(description = "")
  public List<Float> getSoilTemperature6cm() {
    return soilTemperature6cm;
  }

  public void setSoilTemperature6cm(List<Float> soilTemperature6cm) {
    this.soilTemperature6cm = soilTemperature6cm;
  }

  public HourlyResponse soilTemperature18cm(List<Float> soilTemperature18cm) {
    this.soilTemperature18cm = soilTemperature18cm;
    return this;
  }

  public HourlyResponse addSoilTemperature18cmItem(Float soilTemperature18cmItem) {
    if (this.soilTemperature18cm == null) {
      this.soilTemperature18cm = new ArrayList<Float>();
    }
    this.soilTemperature18cm.add(soilTemperature18cmItem);
    return this;
  }

   /**
   * Get soilTemperature18cm
   * @return soilTemperature18cm
  **/
  @Schema(description = "")
  public List<Float> getSoilTemperature18cm() {
    return soilTemperature18cm;
  }

  public void setSoilTemperature18cm(List<Float> soilTemperature18cm) {
    this.soilTemperature18cm = soilTemperature18cm;
  }

  public HourlyResponse soilTemperature54cm(List<Float> soilTemperature54cm) {
    this.soilTemperature54cm = soilTemperature54cm;
    return this;
  }

  public HourlyResponse addSoilTemperature54cmItem(Float soilTemperature54cmItem) {
    if (this.soilTemperature54cm == null) {
      this.soilTemperature54cm = new ArrayList<Float>();
    }
    this.soilTemperature54cm.add(soilTemperature54cmItem);
    return this;
  }

   /**
   * Get soilTemperature54cm
   * @return soilTemperature54cm
  **/
  @Schema(description = "")
  public List<Float> getSoilTemperature54cm() {
    return soilTemperature54cm;
  }

  public void setSoilTemperature54cm(List<Float> soilTemperature54cm) {
    this.soilTemperature54cm = soilTemperature54cm;
  }

  public HourlyResponse soilMoisture01cm(List<Float> soilMoisture01cm) {
    this.soilMoisture01cm = soilMoisture01cm;
    return this;
  }

  public HourlyResponse addSoilMoisture01cmItem(Float soilMoisture01cmItem) {
    if (this.soilMoisture01cm == null) {
      this.soilMoisture01cm = new ArrayList<Float>();
    }
    this.soilMoisture01cm.add(soilMoisture01cmItem);
    return this;
  }

   /**
   * Get soilMoisture01cm
   * @return soilMoisture01cm
  **/
  @Schema(description = "")
  public List<Float> getSoilMoisture01cm() {
    return soilMoisture01cm;
  }

  public void setSoilMoisture01cm(List<Float> soilMoisture01cm) {
    this.soilMoisture01cm = soilMoisture01cm;
  }

  public HourlyResponse soilMoisture13cm(List<Float> soilMoisture13cm) {
    this.soilMoisture13cm = soilMoisture13cm;
    return this;
  }

  public HourlyResponse addSoilMoisture13cmItem(Float soilMoisture13cmItem) {
    if (this.soilMoisture13cm == null) {
      this.soilMoisture13cm = new ArrayList<Float>();
    }
    this.soilMoisture13cm.add(soilMoisture13cmItem);
    return this;
  }

   /**
   * Get soilMoisture13cm
   * @return soilMoisture13cm
  **/
  @Schema(description = "")
  public List<Float> getSoilMoisture13cm() {
    return soilMoisture13cm;
  }

  public void setSoilMoisture13cm(List<Float> soilMoisture13cm) {
    this.soilMoisture13cm = soilMoisture13cm;
  }

  public HourlyResponse soilMoisture39cm(List<Float> soilMoisture39cm) {
    this.soilMoisture39cm = soilMoisture39cm;
    return this;
  }

  public HourlyResponse addSoilMoisture39cmItem(Float soilMoisture39cmItem) {
    if (this.soilMoisture39cm == null) {
      this.soilMoisture39cm = new ArrayList<Float>();
    }
    this.soilMoisture39cm.add(soilMoisture39cmItem);
    return this;
  }

   /**
   * Get soilMoisture39cm
   * @return soilMoisture39cm
  **/
  @Schema(description = "")
  public List<Float> getSoilMoisture39cm() {
    return soilMoisture39cm;
  }

  public void setSoilMoisture39cm(List<Float> soilMoisture39cm) {
    this.soilMoisture39cm = soilMoisture39cm;
  }

  public HourlyResponse soilMoisture927cm(List<Float> soilMoisture927cm) {
    this.soilMoisture927cm = soilMoisture927cm;
    return this;
  }

  public HourlyResponse addSoilMoisture927cmItem(Float soilMoisture927cmItem) {
    if (this.soilMoisture927cm == null) {
      this.soilMoisture927cm = new ArrayList<Float>();
    }
    this.soilMoisture927cm.add(soilMoisture927cmItem);
    return this;
  }

   /**
   * Get soilMoisture927cm
   * @return soilMoisture927cm
  **/
  @Schema(description = "")
  public List<Float> getSoilMoisture927cm() {
    return soilMoisture927cm;
  }

  public void setSoilMoisture927cm(List<Float> soilMoisture927cm) {
    this.soilMoisture927cm = soilMoisture927cm;
  }

  public HourlyResponse soilMoisture2781cm(List<Float> soilMoisture2781cm) {
    this.soilMoisture2781cm = soilMoisture2781cm;
    return this;
  }

  public HourlyResponse addSoilMoisture2781cmItem(Float soilMoisture2781cmItem) {
    if (this.soilMoisture2781cm == null) {
      this.soilMoisture2781cm = new ArrayList<Float>();
    }
    this.soilMoisture2781cm.add(soilMoisture2781cmItem);
    return this;
  }

   /**
   * Get soilMoisture2781cm
   * @return soilMoisture2781cm
  **/
  @Schema(description = "")
  public List<Float> getSoilMoisture2781cm() {
    return soilMoisture2781cm;
  }

  public void setSoilMoisture2781cm(List<Float> soilMoisture2781cm) {
    this.soilMoisture2781cm = soilMoisture2781cm;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HourlyResponse hourlyResponse = (HourlyResponse) o;
    return Objects.equals(this.time, hourlyResponse.time) &&
        Objects.equals(this.temperature2m, hourlyResponse.temperature2m) &&
        Objects.equals(this.relativeHumidity2m, hourlyResponse.relativeHumidity2m) &&
        Objects.equals(this.dewPoint2m, hourlyResponse.dewPoint2m) &&
        Objects.equals(this.apparentTemperature, hourlyResponse.apparentTemperature) &&
        Objects.equals(this.pressureMsl, hourlyResponse.pressureMsl) &&
        Objects.equals(this.cloudCover, hourlyResponse.cloudCover) &&
        Objects.equals(this.cloudCoverLow, hourlyResponse.cloudCoverLow) &&
        Objects.equals(this.cloudCoverMid, hourlyResponse.cloudCoverMid) &&
        Objects.equals(this.cloudCoverHigh, hourlyResponse.cloudCoverHigh) &&
        Objects.equals(this.windSpeed10m, hourlyResponse.windSpeed10m) &&
        Objects.equals(this.windSpeed80m, hourlyResponse.windSpeed80m) &&
        Objects.equals(this.windSpeed120m, hourlyResponse.windSpeed120m) &&
        Objects.equals(this.windSpeed180m, hourlyResponse.windSpeed180m) &&
        Objects.equals(this.windDirection10m, hourlyResponse.windDirection10m) &&
        Objects.equals(this.windDirection80m, hourlyResponse.windDirection80m) &&
        Objects.equals(this.windDirection120m, hourlyResponse.windDirection120m) &&
        Objects.equals(this.windDirection180m, hourlyResponse.windDirection180m) &&
        Objects.equals(this.windGusts10m, hourlyResponse.windGusts10m) &&
        Objects.equals(this.shortwaveRadiation, hourlyResponse.shortwaveRadiation) &&
        Objects.equals(this.directRadiation, hourlyResponse.directRadiation) &&
        Objects.equals(this.directNormalIrradiance, hourlyResponse.directNormalIrradiance) &&
        Objects.equals(this.diffuseRadiation, hourlyResponse.diffuseRadiation) &&
        Objects.equals(this.vapourPressureDeficit, hourlyResponse.vapourPressureDeficit) &&
        Objects.equals(this.evapotranspiration, hourlyResponse.evapotranspiration) &&
        Objects.equals(this.precipitation, hourlyResponse.precipitation) &&
        Objects.equals(this.weatherCode, hourlyResponse.weatherCode) &&
        Objects.equals(this.snowHeight, hourlyResponse.snowHeight) &&
        Objects.equals(this.freezingLevelHeight, hourlyResponse.freezingLevelHeight) &&
        Objects.equals(this.soilTemperature0cm, hourlyResponse.soilTemperature0cm) &&
        Objects.equals(this.soilTemperature6cm, hourlyResponse.soilTemperature6cm) &&
        Objects.equals(this.soilTemperature18cm, hourlyResponse.soilTemperature18cm) &&
        Objects.equals(this.soilTemperature54cm, hourlyResponse.soilTemperature54cm) &&
        Objects.equals(this.soilMoisture01cm, hourlyResponse.soilMoisture01cm) &&
        Objects.equals(this.soilMoisture13cm, hourlyResponse.soilMoisture13cm) &&
        Objects.equals(this.soilMoisture39cm, hourlyResponse.soilMoisture39cm) &&
        Objects.equals(this.soilMoisture927cm, hourlyResponse.soilMoisture927cm) &&
        Objects.equals(this.soilMoisture2781cm, hourlyResponse.soilMoisture2781cm);
  }

  @Override
  public int hashCode() {
    return Objects.hash(time, temperature2m, relativeHumidity2m, dewPoint2m, apparentTemperature, pressureMsl, cloudCover, cloudCoverLow, cloudCoverMid, cloudCoverHigh, windSpeed10m, windSpeed80m, windSpeed120m, windSpeed180m, windDirection10m, windDirection80m, windDirection120m, windDirection180m, windGusts10m, shortwaveRadiation, directRadiation, directNormalIrradiance, diffuseRadiation, vapourPressureDeficit, evapotranspiration, precipitation, weatherCode, snowHeight, freezingLevelHeight, soilTemperature0cm, soilTemperature6cm, soilTemperature18cm, soilTemperature54cm, soilMoisture01cm, soilMoisture13cm, soilMoisture39cm, soilMoisture927cm, soilMoisture2781cm);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HourlyResponse {\n");
    
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    temperature2m: ").append(toIndentedString(temperature2m)).append("\n");
    sb.append("    relativeHumidity2m: ").append(toIndentedString(relativeHumidity2m)).append("\n");
    sb.append("    dewPoint2m: ").append(toIndentedString(dewPoint2m)).append("\n");
    sb.append("    apparentTemperature: ").append(toIndentedString(apparentTemperature)).append("\n");
    sb.append("    pressureMsl: ").append(toIndentedString(pressureMsl)).append("\n");
    sb.append("    cloudCover: ").append(toIndentedString(cloudCover)).append("\n");
    sb.append("    cloudCoverLow: ").append(toIndentedString(cloudCoverLow)).append("\n");
    sb.append("    cloudCoverMid: ").append(toIndentedString(cloudCoverMid)).append("\n");
    sb.append("    cloudCoverHigh: ").append(toIndentedString(cloudCoverHigh)).append("\n");
    sb.append("    windSpeed10m: ").append(toIndentedString(windSpeed10m)).append("\n");
    sb.append("    windSpeed80m: ").append(toIndentedString(windSpeed80m)).append("\n");
    sb.append("    windSpeed120m: ").append(toIndentedString(windSpeed120m)).append("\n");
    sb.append("    windSpeed180m: ").append(toIndentedString(windSpeed180m)).append("\n");
    sb.append("    windDirection10m: ").append(toIndentedString(windDirection10m)).append("\n");
    sb.append("    windDirection80m: ").append(toIndentedString(windDirection80m)).append("\n");
    sb.append("    windDirection120m: ").append(toIndentedString(windDirection120m)).append("\n");
    sb.append("    windDirection180m: ").append(toIndentedString(windDirection180m)).append("\n");
    sb.append("    windGusts10m: ").append(toIndentedString(windGusts10m)).append("\n");
    sb.append("    shortwaveRadiation: ").append(toIndentedString(shortwaveRadiation)).append("\n");
    sb.append("    directRadiation: ").append(toIndentedString(directRadiation)).append("\n");
    sb.append("    directNormalIrradiance: ").append(toIndentedString(directNormalIrradiance)).append("\n");
    sb.append("    diffuseRadiation: ").append(toIndentedString(diffuseRadiation)).append("\n");
    sb.append("    vapourPressureDeficit: ").append(toIndentedString(vapourPressureDeficit)).append("\n");
    sb.append("    evapotranspiration: ").append(toIndentedString(evapotranspiration)).append("\n");
    sb.append("    precipitation: ").append(toIndentedString(precipitation)).append("\n");
    sb.append("    weatherCode: ").append(toIndentedString(weatherCode)).append("\n");
    sb.append("    snowHeight: ").append(toIndentedString(snowHeight)).append("\n");
    sb.append("    freezingLevelHeight: ").append(toIndentedString(freezingLevelHeight)).append("\n");
    sb.append("    soilTemperature0cm: ").append(toIndentedString(soilTemperature0cm)).append("\n");
    sb.append("    soilTemperature6cm: ").append(toIndentedString(soilTemperature6cm)).append("\n");
    sb.append("    soilTemperature18cm: ").append(toIndentedString(soilTemperature18cm)).append("\n");
    sb.append("    soilTemperature54cm: ").append(toIndentedString(soilTemperature54cm)).append("\n");
    sb.append("    soilMoisture01cm: ").append(toIndentedString(soilMoisture01cm)).append("\n");
    sb.append("    soilMoisture13cm: ").append(toIndentedString(soilMoisture13cm)).append("\n");
    sb.append("    soilMoisture39cm: ").append(toIndentedString(soilMoisture39cm)).append("\n");
    sb.append("    soilMoisture927cm: ").append(toIndentedString(soilMoisture927cm)).append("\n");
    sb.append("    soilMoisture2781cm: ").append(toIndentedString(soilMoisture2781cm)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
