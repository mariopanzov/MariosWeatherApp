/*
 * Open-Meteo Historical Weather API
 * The Historical Weather API is based on reanalysis datasets and uses a combination of weather station, aircraft, buoy, radar, and satellite observations to create a comprehensive record of past weather conditions.
 *
 * OpenAPI spec version: 1.0
 * Contact: info@open-meteo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.historical_weather_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * InlineResponse400
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-06-21T22:36:25.088151003Z[GMT]")

public class InlineResponse400 {
  @SerializedName("error")
  private Boolean error = null;

  @SerializedName("reason")
  private String reason = null;

  public InlineResponse400 error(Boolean error) {
    this.error = error;
    return this;
  }

   /**
   * Always set true for errors
   * @return error
  **/
  @Schema(description = "Always set true for errors")
  public Boolean isError() {
    return error;
  }

  public void setError(Boolean error) {
    this.error = error;
  }

  public InlineResponse400 reason(String reason) {
    this.reason = reason;
    return this;
  }

   /**
   * Description of the error
   * @return reason
  **/
  @Schema(example = "Latitude must be in range of -90 to 90Â°. Given: 300", description = "Description of the error")
  public String getReason() {
    return reason;
  }

  public void setReason(String reason) {
    this.reason = reason;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse400 inlineResponse400 = (InlineResponse400) o;
    return Objects.equals(this.error, inlineResponse400.error) &&
        Objects.equals(this.reason, inlineResponse400.reason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(error, reason);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse400 {\n");
    
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
